name: Build and Publish Base L4T Images

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_call:
    inputs:
      dotnet:
        required: true
        type: string
      download-sdk:
        required: true
        type: string
      download-svc:
        required: true
        type: string
      download-web:
        required: true
        type: string
    secrets:
      registry:
        required: true
env:
  REGISTRY: docker.io
  LOGIN: turowicz  
  # github.repository as <account>/<repo>
  IMAGE_NAME: surveily/developer.dotnet

jobs:
  build-sdk:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Checkout repository
        uses: actions/checkout@v2

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@1e95c1de343b5b0c23352d6417ee3e48d5bcd422
        with:
          cosign-release: 'v1.4.0'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.LOGIN }}
          password: ${{ secrets.registry }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # # Build and push Docker image with Buildx (don't push on PR)
      # # https://github.com/docker/build-push-action
      # - name: Build and push .NET ${{ inputs.dotnet }} SDK image
      #   id: build-and-push-sdk
      #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      #   with:
      #     context: .
      #     file: src/surveily.developer.dotnet.sdk.l4t.dockerfile
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: |
      #       ${{ env.IMAGE_NAME }}:${{ inputs.dotnet }}-l4t-sdk
      #       ${{ env.IMAGE_NAME }}:${{ inputs.dotnet }}-l4t-sdk-${{ steps.date.outputs.date }}.${{ github.run_number }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     build-args: |
      #       version=${{ inputs.dotnet }}
      #       download=${{ inputs.download-sdk }}

    - uses: pguyot/arm-runner-action@v1
      id: build_image
      with:
        commands: |
            /usr/bin/docker build --build-arg version=${{ inputs.dotnet }} --build-arg download=${{ inputs.download-sdk }} --tag ${{ env.IMAGE_NAME }}:${{ inputs.dotnet }}-l4t-sdk --tag ${{ env.IMAGE_NAME }}:${{ inputs.dotnet }}-l4t-sdk-${{ steps.date.outputs.date }}.${{ github.run_number }} --file src/surveily.developer.dotnet.sdk.dockerfile .
            /usr/bin/docker push ${{ env.IMAGE_NAME }}:${{ inputs.dotnet }}-l4t-sdk
            /usr/bin/docker push ${{ env.IMAGE_NAME }}:${{ inputs.dotnet }}-l4t-sdk-${{ steps.date.outputs.date }}.${{ github.run_number }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published .NET ${{ inputs.dotnet }} SDK image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push-sdk.outputs.digest }}
  
  # build-aspnet:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #     # This is used to complete the identity challenge
  #     # with sigstore/fulcio when running outside of PRs.
  #     id-token: write
  #   steps:
  #     - name: Get current date
  #       id: date
  #       run: echo "::set-output name=date::$(date +'%Y%m%d')"

  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     # Install the cosign tool except on PR
  #     # https://github.com/sigstore/cosign-installer
  #     - name: Install cosign
  #       if: github.event_name != 'pull_request'
  #       uses: sigstore/cosign-installer@1e95c1de343b5b0c23352d6417ee3e48d5bcd422
  #       with:
  #         cosign-release: 'v1.4.0'

  #     # Workaround: https://github.com/docker/build-push-action/issues/461
  #     - name: Setup Docker buildx
  #       uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

  #     # Login against a Docker registry except on PR
  #     # https://github.com/docker/login-action
  #     - name: Log into registry ${{ env.REGISTRY }}
  #       if: github.event_name != 'pull_request'
  #       uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ env.LOGIN }}
  #         password: ${{ secrets.registry }}

  #     # Extract metadata (tags, labels) for Docker
  #     # https://github.com/docker/metadata-action
  #     - name: Extract Docker metadata
  #       id: meta
  #       uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #     # Build and push Docker image with Buildx (don't push on PR)
  #     # https://github.com/docker/build-push-action
  #     - name: Build and push ASP.NET ${{ inputs.dotnet }} Runtime image
  #       id: build-and-push-aspnet
  #       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #       with:
  #         context: .
  #         file: src/surveily.developer.dotnet.runtime.web.l4t.dockerfile
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: |
  #           ${{ env.IMAGE_NAME }}:${{ inputs.dotnet }}-l4t-runtime-web
  #           ${{ env.IMAGE_NAME }}:${{ inputs.dotnet }}-l4t-runtime-web-${{ steps.date.outputs.date }}.${{ github.run_number }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         build-args: |
  #           version=${{ inputs.dotnet }}
  #           download=${{ inputs.download-web }}

  #     # Sign the resulting Docker image digest except on PRs.
  #     # This will only write to the public Rekor transparency log when the Docker
  #     # repository is public to avoid leaking data.  If you would like to publish
  #     # transparency data even for private images, pass --force to cosign below.
  #     # https://github.com/sigstore/cosign
  #     - name: Sign the published ASP.NET ${{ inputs.dotnet }} Runtime image
  #       if: ${{ github.event_name != 'pull_request' }}
  #       env:
  #         COSIGN_EXPERIMENTAL: "true"
  #       # This step uses the identity token to provision an ephemeral certificate
  #       # against the sigstore community Fulcio instance.
  #       run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push-aspnet.outputs.digest }}
  
  # build-svc:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #     # This is used to complete the identity challenge
  #     # with sigstore/fulcio when running outside of PRs.
  #     id-token: write
  #   steps:
  #     - name: Get current date
  #       id: date
  #       run: echo "::set-output name=date::$(date +'%Y%m%d')"

  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     # Install the cosign tool except on PR
  #     # https://github.com/sigstore/cosign-installer
  #     - name: Install cosign
  #       if: github.event_name != 'pull_request'
  #       uses: sigstore/cosign-installer@1e95c1de343b5b0c23352d6417ee3e48d5bcd422
  #       with:
  #         cosign-release: 'v1.4.0'

  #     # Workaround: https://github.com/docker/build-push-action/issues/461
  #     - name: Setup Docker buildx
  #       uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

  #     # Login against a Docker registry except on PR
  #     # https://github.com/docker/login-action
  #     - name: Log into registry ${{ env.REGISTRY }}
  #       if: github.event_name != 'pull_request'
  #       uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ env.LOGIN }}
  #         password: ${{ secrets.registry }}

  #     # Extract metadata (tags, labels) for Docker
  #     # https://github.com/docker/metadata-action
  #     - name: Extract Docker metadata
  #       id: meta
  #       uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #     # Build and push Docker image with Buildx (don't push on PR)
  #     # https://github.com/docker/build-push-action
  #     - name: Build and push .NET ${{ inputs.dotnet }} Runtime image
  #       id: build-and-push-svc
  #       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #       with:
  #         context: .
  #         file: src/surveily.developer.dotnet.runtime.svc.l4t.dockerfile
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: |
  #           ${{ env.IMAGE_NAME }}:${{ inputs.dotnet }}-l4t-runtime-svc
  #           ${{ env.IMAGE_NAME }}:${{ inputs.dotnet }}-l4t-runtime-svc-${{ steps.date.outputs.date }}.${{ github.run_number }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         build-args: |
  #           version=${{ inputs.dotnet }}
  #           download=${{ inputs.download-svc }}

  #     # Sign the resulting Docker image digest except on PRs.
  #     # This will only write to the public Rekor transparency log when the Docker
  #     # repository is public to avoid leaking data.  If you would like to publish
  #     # transparency data even for private images, pass --force to cosign below.
  #     # https://github.com/sigstore/cosign
  #     - name: Sign the published .NET ${{ inputs.dotnet }} Runtime image
  #       if: ${{ github.event_name != 'pull_request' }}
  #       env:
  #         COSIGN_EXPERIMENTAL: "true"
  #       # This step uses the identity token to provision an ephemeral certificate
  #       # against the sigstore community Fulcio instance.
  #       run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push-svc.outputs.digest }}
